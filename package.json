{
  "name": "devfaq-api",
  "version": "1.0.0",
  "main": "dist/src/index.js",
  "private": true,
  "scripts": {
    "dev": "npm run build && npm run prepare-db && concurrently \"tsc --watch\" nodemon",
    "start": "npm run prepare-db && node dist/src/index.js",
    "test": "cross-env NODE_ENV=test ENV=test npm run test:all",
    "test:integration": "cross-env NODE_ENV=test ENV=test npm run test:_integration",
    "test:integration:single": "cross-env NODE_ENV=test ENV=test npm run test:prepare:integration && npm run mocha",
    "test:unit": "cross-env NODE_ENV=test ENV=test npm run mocha -- src/**/*.test.ts --exclude src/**/*.integration.test.ts",
    "test:unit:single": "cross-env NODE_ENV=test ENV=test npm run mocha",
    "mocha": "cross-env ENV=test mocha",
    "tslint": "tslint -p tsconfig.json",
    "tsc": "tsc --noEmit -p tsconfig.json",
    "//1": "/*****************************************************************************",
    "//2": "* Rest of those commands are used internally and should not be used directly!",
    "//3": "*****************************************************************************/",
    "db:test:create": "cross-env NODE_ENV=test ENV=test sequelize --config='dist/src/config/database.js' db:create || true",
    "db:test:drop": "cross-env NODE_ENV=test ENV=test sequelize --config='dist/src/config/database.js' db:drop || true",
    "test:all": "npm run tsc && npm run tslint && npm run test:unit && npm run test:integration",
    "test:prepare:integration": "npm run build && npm run db:test:drop && npm run db:test:create && npm run prepare-db",
    "test:_integration": "npm run test:prepare:integration && npm run mocha -- src/**/*.integration.test.ts",
    "test:ci": "cross-env NODE_ENV=test ENV=test npm run mocha:ci",
    "mocha:ci": "npm run test:prepare:integration && cross-env mocha 'src/**/*.test.ts'",
    "clean": "rm -rf dist",
    "build": "npm run clean && tsc && rsync -av --exclude='*.ts' src/** dist/src/",
    "prepare-db": "npm run migrate:copy && npm run db-clean && npm run migrate:db",
    "db-clean": "rm dist/src/migrations/*.ts && rm dist/src/migrations/*.js.map",
    "migrate:db": "sequelize db:migrate --config='dist/src/config/database.js' --migrations-path='dist/src/migrations'",
    "migrate:copy": "cp -R src/migrations/* dist/src/migrations",
    "danger": "danger ci"
  },
  "dependencies": {
    "@sentry/node": "5.0.5",
    "boom": "7.3.0",
    "dotenv": "7.0.0",
    "faker": "4.1.0",
    "google-auth-library": "3.1.2",
    "hapi": "18.1.0",
    "hapi-auth-bearer-token": "6.1.1",
    "hapi-swagger": "9.4.2",
    "inert": "5.1.3",
    "lodash": "4.17.11",
    "moment": "2.24.0",
    "node-fetch": "2.3.0",
    "pg": "7.9.0",
    "pg-hstore": "2.3.2",
    "reflect-metadata": "0.1.13",
    "sequelize": "4.43.0",
    "sequelize-typescript": "0.6.9",
    "typesafe-hapi": "1.0.0",
    "typesafe-joi": "1.0.0-beta5",
    "uuid": "3.3.2",
    "vision": "5.4.4"
  },
  "devDependencies": {
    "@types/boom": "7.2.1",
    "@types/chai": "4.1.7",
    "@types/chai-as-promised": "7.1.0",
    "@types/chai-datetime": "0.0.32",
    "@types/dotenv": "6.1.1",
    "@types/faker": "4.1.5",
    "@types/inert": "5.1.2",
    "@types/lodash": "4.14.123",
    "@types/mocha": "5.2.6",
    "@types/node": "11.13.0",
    "@types/node-fetch": "2.1.7",
    "@types/sequelize": "4.27.46",
    "@types/sinon": "7.0.11",
    "@types/sinon-chai": "3.2.2",
    "@types/uuid": "3.4.4",
    "@types/vision": "5.3.6",
    "chai": "4.2.0",
    "chai-as-promised": "7.1.1",
    "chai-datetime": "1.5.0",
    "concurrently": "4.1.0",
    "cross-env": "5.2.0",
    "danger": "7.0.19",
    "husky": "1.3.1",
    "mocha": "6.0.2",
    "nodemon": "1.18.10",
    "prettier": "1.16.4",
    "pretty-quick": "1.10.0",
    "sequelize-cli": "5.4.0",
    "sinon": "7.3.1",
    "sinon-chai": "3.3.0",
    "ts-node": "8.0.3",
    "tslint": "5.15.0",
    "tslint-config-prettier": "1.18.0",
    "tslint-immutable": "5.5.2",
    "typescript": "3.3.4000"
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run tslint && pretty-quick --staged"
    }
  }
}
